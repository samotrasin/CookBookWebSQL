@* @page "/readrestaurant/{Id:int}"
@inject CookBookWebSQL.Service.RestaurantService restaurantService

<div>
    <div class="card">
        <div class="card-header fw-bold h5 text-light bg-primary">@restaurant?.Name</div>
        <div class="card-body">
            <img class="card-img-top text-center" src="@restaurant?.Images" width="400" height="400" alt="Restaurant Image" />
            @if (restaurant?.Images != null)
            {
                <img class="card-img-top text-center" src="@restaurant?.Images" width="400" height="400" alt="Restaurant Image" />
            }
            else
            {
                <p class="text-center">No image available</p>
            }
            <table class="table table-active">
                <tbody>
                    <tr>
                        <td>Restaurant Information:</td>
                        <td>@restaurant?.Description</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            <ul class="list-group list-group-horizontal-sm text-center" style="list-style:none;">
                <li class="list-group-item-action"><i class="oi oi-thumb-up"></i></li>
                <li class="list-group-item-action"><i class="oi oi-share-boxed text-primary"></i></li>
                <li class="list-group-item-action"><i class="oi oi-arrow-circle-bottom"></i></li>
            </ul>
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    public CookBookWebSQL.Models.Restaurant? restaurant { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id <= 0) return;

        // Fetch the restaurant data by ID
        restaurant = await restaurantService.GetRestaurantByIdAsync(Id);
    }
} *@
@page "/readrestaurant/{Id:int}"
@inject CookBookWebSQL.Service.RestaurantService restaurantService

<div>
    <div class="card">
        <div class="card-header fw-bold h5 text-light" style="background-color: rgb(0, 42, 81);">@restaurant?.Name</div>
        <div class="card-body">
            @if (restaurant?.Images != null && restaurant.Images.Count > 0)
            {
                @foreach (var image in restaurant.Images)
                {
                    <img class="rounded mx-auto d-block" src="/uploads/@image.ImagePath" width="500" height="300" alt="Restaurant Image" />
                }
            }
            else
            {
                <p class="text-center">No image available</p>
            }
            <table class="table table-active">
                <tbody>
                    <tr>
                        <td><b>Restaurant Information:</b></td>
                        <td style="white-space: pre-wrap;">@restaurant?.Description</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    public CookBookWebSQL.Models.Restaurant? restaurant { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id <= 0) return;

        // Fetch the restaurant data by ID
        restaurant = await restaurantService.GetRestaurantByIdAsync(Id);
    }
}