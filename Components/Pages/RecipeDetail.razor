@page "/recipe-detail"

@using CookBookWebSQL.Models
@using CookBookWebSQL.Service
@inject RecipeService RecipeService

<PageTitle>Recipe Detail</PageTitle>

<div class="container mx-auto py-10">
    <!-- Heading Section -->
    <h1 class="text-5xl font-extrabold text-center text-teal-600 mb-10">Explore Delicious Recipes</h1>

    @if (Recipes == null)
    {
        <div class="text-center text-xl text-gray-500">Loading recipes...</div>
    }
    else if (!Recipes.Any())
    {
        <div class="text-center text-xl text-gray-500">No recipes found.</div>
    }
    else
    {
        <!-- Recipe Grid -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10 px-4">
            @foreach (var recipe in Recipes)
            {
                <div class="card bg-white rounded-lg shadow-2xl overflow-hidden transition-all transform hover:scale-105 hover:shadow-2xl">
                    @if (recipe.Images.Any())
                    {
                        <img src="@recipe.Images.First().Path" alt="@recipe.Name" class="w-full h-60 object-cover" />
                    }
                    else
                    {
                        <p class="text-center text-sm text-gray-500">No image available</p>
                    }
                    <div class="p-6">
                        <h2 class="text-2xl font-semibold text-gray-800 truncate">@recipe.Name</h2>
                        <button @onclick="() => ShowRecipeDetails(recipe.Id)" class="mt-4 bg-teal-500 text-white px-6 py-3 rounded-lg hover:bg-teal-600 transition-all">
                            View Details
                        </button>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Recipe Detail Section (Initially Hidden) -->
    @if (SelectedRecipe != null)
    {
        <div class="max-w-4xl mx-auto my-8 p-8 bg-white rounded-lg shadow-xl transition-all">
            <h2 class="text-4xl font-extrabold text-gray-800 mb-4">@SelectedRecipe.Name</h2>
            <p class="text-lg text-gray-700 mb-6"><strong>Instructions:</strong> @SelectedRecipe.Instructions</p>
            <div class="text-sm text-gray-600 mb-4">
                <strong>Created:</strong> @SelectedRecipe.CreatedDate.ToString("MMMM dd, yyyy") 
                <span class="ml-4"><strong>Updated:</strong> @SelectedRecipe.UpdatedDate.ToString("MMMM dd, yyyy")</span>
            </div>

            <!-- Recipe Images -->
            @if (SelectedRecipe.Images.Any())
            {
                <div class="mt-6">
                    <h3 class="text-2xl font-semibold text-gray-800 mb-4">Images:</h3>
                    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                        @foreach (var image in SelectedRecipe.Images)
                        {
                            <div class="card bg-gray-100 rounded-lg shadow-md overflow-hidden">
                                <img src="@image.Path" alt="@SelectedRecipe.Name" class="w-full h-64 object-cover rounded-lg" />
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <p class="text-center text-sm text-gray-500">No images available for this recipe.</p>
            }

            <!-- Categories Section -->
            @if (SelectedRecipe.CategoryRecipe.Any())
            {
                <div class="mt-6">
                    <h3 class="text-2xl font-semibold text-gray-800 mb-4">Categories:</h3>
                    <div class="flex flex-wrap">
                        @foreach (var category in SelectedRecipe.CategoryRecipe)
                        {
                            <span class="inline-block bg-teal-200 text-teal-800 px-5 py-2 rounded-full text-sm mr-2 mb-2">
                                @category.Category.Name
                            </span>
                        }
                    </div>
                </div>
            }

            <button @onclick="() => SelectedRecipe = null" class="mt-8 bg-gray-300 text-black px-6 py-3 rounded-lg hover:bg-gray-400 transition-all">
                Back to Recipe List
            </button>
        </div>
    }
</div>

@code {
    private List<Recipe>? Recipes;
    private Recipe? SelectedRecipe;

    protected override async Task OnInitializedAsync()
    {
        Recipes = await RecipeService.GetRecipesAsync();
        Console.WriteLine($"Recipes Loaded: {Recipes?.Count}");
        if (Recipes != null)
        {
            foreach (var recipe in Recipes)
            {
                Console.WriteLine($"Recipe ID: {recipe.Id}, Recipe Name: {recipe.Name}, Recipe Images Count: {recipe.Images.Count}");
            }
        }
    }

    private void ShowRecipeDetails(int recipeId)
    {
        Console.WriteLine($"Recipe ID Selected: {recipeId}");
        SelectedRecipe = Recipes?.FirstOrDefault(r => r.Id == recipeId);
        if (SelectedRecipe == null)
        {
            Console.WriteLine("SelectedRecipe is null.");
        }
        else
        {
            Console.WriteLine($"Selected Recipe: {SelectedRecipe.Name}");
        }
        StateHasChanged();
    }
}
