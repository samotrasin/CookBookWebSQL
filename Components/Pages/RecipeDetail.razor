@page "/recipe-detail"

@rendermode InteractiveServer
@using CookBookWebSQL.Models
@using CookBookWebSQL.Service
@inject RecipeService RecipeService
@inject CookBookWebSQL.Service.RecipeService recipeService
@inject CookBookWebSQL.Service.CategoryService categoryService
@inject IWebHostEnvironment Environment
@inject ILogger<RecipePage> Logger
@inject IJSRuntime JS

<PageTitle>Recipe Detail</PageTitle>

<div class="container mx-auto py-12 px-4">
    <!-- Heading Section -->
    <h1 class="text-5xl font-extrabold text-center text-teal-600 mb-12 tracking-wide">Explore Delicious Recipes</h1>

    <!-- Error Message Section -->
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="text-center text-xl text-red-600 mb-8">
            @ErrorMessage
        </div>
    }

    @if (Recipes == null)
    {
        <div class="text-center text-xl text-gray-600">Loading recipes...</div>
    }
    else if (!Recipes.Any())
    {
        <div class="text-center text-xl text-gray-600">No recipes found.</div>
    }
    else
    {
        <!-- Recipe Grid -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-12">
            @foreach (var recipe in Recipes)
            {
                <div class="card bg-white rounded-lg shadow-xl overflow-hidden transition-transform transform hover:scale-105 hover:shadow-2xl hover:border-teal-600 hover:border-2">
                    @if (recipe.Images?.Any() == true)
                    {
                        <img src="/uploads/@recipe.Images.First().Path" alt="@recipe.Name" class="w-full h-72 object-cover rounded-t-lg" />
                    }
                    else
                    {
                        <p class="text-center text-sm text-gray-500 py-6">No image available</p>
                    }
                    <div class="p-6">
                        <h2 class="text-2xl font-semibold text-gray-800 truncate">@recipe.Name</h2>
                        <button @onclick="() => ShowRecipeDetails(recipe.Id)" class="mt-6 bg-teal-600 text-white px-6 py-3 rounded-lg hover:bg-teal-700 focus:outline-none transition-all duration-300 ease-in-out transform hover:scale-105">
                            View Details
                        </button>
                    </div>
                </div>
            }
        </div>
    }

    <!-- Modal Popup for Recipe Details -->
    @if (SelectedRecipe != null)
    {
        <div class="fixed inset-0 bg-gray-900 bg-opacity-75 z-50 flex items-center justify-center overflow-y-auto transition-all duration-300 ease-in-out">
            <div class="bg-white rounded-lg shadow-xl p-10 max-w-3xl w-full max-h-[90vh] overflow-y-auto transition-all duration-300 transform scale-95 hover:scale-100">
                <h2 class="text-4xl font-extrabold text-gray-800 mb-6 tracking-wide">@SelectedRecipe.Name</h2>
                <p class="text-lg text-gray-700 mb-8"><strong>Instructions:</strong> @SelectedRecipe.Instructions</p>
                <div class="text-sm text-gray-600 mb-6">
                    <strong>Created:</strong> @SelectedRecipe.CreatedDate.ToString("MMMM dd, yyyy") 
                    <span class="ml-4"><strong>Updated:</strong> @SelectedRecipe.UpdatedDate.ToString("MMMM dd, yyyy")</span>
                </div>

                <!-- Recipe Images -->
                @if (SelectedRecipe.Images?.Any() == true)
                {
                    <div class="mt-8">
                        <h3 class="text-2xl font-semibold text-gray-800 mb-6">Images:</h3>
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10">
                            @foreach (var image in SelectedRecipe.Images)
                            {
                                <div class="card bg-gray-100 rounded-lg shadow-lg overflow-hidden">
                                    <img src="@image.Path" alt="@SelectedRecipe.Name" class="w-full h-64 object-cover rounded-lg" />
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <p class="text-center text-sm text-gray-500">No images available for this recipe.</p>
                }

                <!-- Categories Section -->
                @if (SelectedRecipe.CategoryRecipe?.Any() == true)
                {
                    <div class="mt-8">
                        <h3 class="text-2xl font-semibold text-gray-800 mb-6">Categories:</h3>
                        <div class="flex flex-wrap">
                            @foreach (var category in SelectedRecipe.CategoryRecipe)
                            {
                                <span class="inline-block bg-teal-200 text-teal-800 px-6 py-2 rounded-full text-sm mr-4 mb-4">
                                    @category.Category?.Name
                                </span>
                            }
                        </div>
                    </div>
                }

                <button @onclick="() => CloseModal()" class="mt-8 bg-gray-300 text-black px-6 py-3 rounded-lg hover:bg-gray-400 transition-all focus:outline-none">
                    Close
                </button>
            </div>
        </div>
    }
</div>

@code {
    private List<Recipe>? Recipes;
    private Recipe? SelectedRecipe;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Recipes = await RecipeService.GetRecipesAsync();
            Console.WriteLine($"Recipes count: {Recipes?.Count()}");

            if (Recipes == null || !Recipes.Any())
            {
                ErrorMessage = "No recipes found.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error loading recipes: {ex.Message}";
            Console.WriteLine($"Error loading recipes: {ex.Message}");
        }
    }

    private void ShowRecipeDetails(int recipeId)
    {
        SelectedRecipe = Recipes?.FirstOrDefault(r => r.Id == recipeId);
    }

    private void CloseModal()
    {
        SelectedRecipe = null;
    }
}
